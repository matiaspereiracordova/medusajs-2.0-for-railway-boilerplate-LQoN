#!/usr/bin/env node

/**
 * Script para verificar el estado del seed en Railway
 * √ötil para diagnosticar problemas de seeding
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç Verificando estado del seed...\n');

// 1. Verificar variables de entorno
console.log('üìã Variables de Entorno:');
console.log('  - NODE_ENV:', process.env.NODE_ENV || '(no configurada)');
console.log('  - RAILWAY_ENVIRONMENT:', process.env.RAILWAY_ENVIRONMENT || '(no configurada)');
console.log('  - RAILWAY_PROJECT_ID:', process.env.RAILWAY_PROJECT_ID || '(no configurada)');
console.log('  - FORCE_SEED:', process.env.FORCE_SEED || '(no configurada)');
console.log('  - DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ Configurada' : '‚ùå No configurada');
console.log('');

// 2. Verificar archivo marker
const seedMarkerPath = path.join(__dirname, '.seed-completed');
if (fs.existsSync(seedMarkerPath)) {
  const timestamp = fs.readFileSync(seedMarkerPath, 'utf8');
  console.log('üìù Marker File:');
  console.log('  - Estado: ‚úÖ Existe');
  console.log('  - Fecha de √∫ltima ejecuci√≥n:', timestamp);
} else {
  console.log('üìù Marker File:');
  console.log('  - Estado: ‚ùå No existe (seed no se ha ejecutado)');
}
console.log('');

// 3. Verificar archivos necesarios
console.log('üìÅ Archivos del Sistema:');
const filesToCheck = [
  './src/scripts/seed.ts',
  './railway-post-deploy.js',
  './railway.json',
  './package.json'
];

filesToCheck.forEach(file => {
  const fullPath = path.join(__dirname, file);
  const exists = fs.existsSync(fullPath);
  console.log(`  - ${file}: ${exists ? '‚úÖ' : '‚ùå'}`);
});
console.log('');

// 4. Verificar railway.json
console.log('‚öôÔ∏è Configuraci√≥n Railway:');
try {
  const railwayConfig = JSON.parse(fs.readFileSync(path.join(__dirname, 'railway.json'), 'utf8'));
  console.log('  - postDeployCommand:', railwayConfig.deploy?.postDeployCommand || '(no configurado)');
  
  if (railwayConfig.deploy?.postDeployCommand === 'node railway-post-deploy.js') {
    console.log('  - Estado: ‚úÖ Configuraci√≥n correcta');
  } else {
    console.log('  - Estado: ‚ö†Ô∏è Deber√≠a ser "node railway-post-deploy.js"');
  }
} catch (error) {
  console.log('  - Estado: ‚ùå Error leyendo railway.json');
}
console.log('');

// 5. Recomendaciones
console.log('üí° Recomendaciones:');

if (!process.env.RAILWAY_ENVIRONMENT && !process.env.RAILWAY_PROJECT_ID) {
  console.log('  ‚ö†Ô∏è No est√°s en Railway. Este script es principalmente para Railway.');
}

if (fs.existsSync(seedMarkerPath) && process.env.FORCE_SEED !== 'true') {
  console.log('  ‚ÑπÔ∏è El seed ya se ejecut√≥. Para re-ejecutar:');
  console.log('     1. Configura FORCE_SEED=true en Railway');
  console.log('     2. O ejecuta: npm run seed:force');
  console.log('     3. O elimina el archivo .seed-completed');
}

if (!fs.existsSync(seedMarkerPath)) {
  console.log('  ‚ÑπÔ∏è El seed no se ha ejecutado a√∫n.');
  console.log('     - Deber√≠a ejecutarse autom√°ticamente en el pr√≥ximo deployment');
  console.log('     - O ejec√∫talo manualmente: npm run seed');
}

console.log('');
console.log('‚úÖ Verificaci√≥n completada!');
console.log('');
console.log('üìö Para m√°s informaci√≥n, consulta: RAILWAY-SEED-GUIDE.md');


