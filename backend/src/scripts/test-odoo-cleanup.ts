import { cleanupOdooDuplicates, identifyOdooDuplicates } from "./cleanup-odoo-duplicates";

async function testOdooCleanup() {
  console.log("üß™ Iniciando prueba de limpieza de duplicados de Odoo...");

  try {
    // Primero identificar duplicados sin eliminarlos
    console.log("\n1Ô∏è‚É£ Identificando duplicados...");
    const identifyResult = await identifyOdooDuplicates();
    
    console.log("\nüìä Resultado de identificaci√≥n:");
    console.log(`   Total productos: ${identifyResult.totalProducts}`);
    console.log(`   Duplicados encontrados: ${identifyResult.duplicatesFound}`);

    if (identifyResult.duplicatesFound === 0) {
      console.log("‚úÖ No hay duplicados para limpiar");
      return;
    }

    // Preguntar si continuar con la limpieza
    console.log("\n‚ö†Ô∏è Se encontraron duplicados. ¬øDesea continuar con la limpieza?");
    console.log("üí° Para ejecutar la limpieza real, use: npm run cleanup-odoo-duplicates");
    console.log("üí° O use el endpoint: POST /admin/cleanup-odoo-duplicates");

    // Simular limpieza (solo mostrar qu√© se har√≠a)
    console.log("\n2Ô∏è‚É£ Simulando limpieza...");
    console.log("üîç En modo de prueba, no se eliminar√°n productos reales");
    console.log("‚úÖ Prueba completada exitosamente");

  } catch (error) {
    console.error("‚ùå Error en prueba de limpieza:", error);
    throw error;
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  testOdooCleanup()
    .then(() => {
      console.log("\nüéâ Prueba completada exitosamente");
      process.exit(0);
    })
    .catch(error => {
      console.error("\n‚ùå Prueba fall√≥:", error);
      process.exit(1);
    });
}

export default testOdooCleanup;
